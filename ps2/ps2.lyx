#LyX 2.0 created this file. For more info see http://www.lyx.org/
\lyxformat 413
\begin_document
\begin_header
\textclass article
\use_default_options true
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize letterpaper
\use_geometry true
\use_amsmath 1
\use_esint 1
\use_mhchem 1
\use_mathdots 1
\cite_engine basic
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\leftmargin 2cm
\topmargin 2cm
\rightmargin 2cm
\bottommargin 2cm
\headheight 2cm
\headsep 2cm
\secnumdepth 3
\tocdepth 3
\paragraph_separation skip
\defskip medskip
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
CSC 458: Problem Set 2
\end_layout

\begin_layout Author
Zeeshan Qureshi (g0zee)
\end_layout

\begin_layout Section*
Chapter 4
\end_layout

\begin_layout Subsection*
Q1
\end_layout

\begin_layout Subsubsection*
(a)
\end_layout

\begin_layout Standard
Q's speaker will receive 2 routes to P:
\end_layout

\begin_layout Itemize
\begin_inset Formula $\left\langle P\right\rangle $
\end_inset


\end_layout

\begin_layout Itemize
\begin_inset Formula $\left\langle R,P\right\rangle $
\end_inset


\end_layout

\begin_layout Subsubsection*
(b)
\end_layout

\begin_layout Itemize
\begin_inset Formula $A\rightarrow B$
\end_inset

 goes through link 1
\end_layout

\begin_layout Itemize
\begin_inset Formula $B\rightarrow A$
\end_inset

 goes through link 2
\end_layout

\begin_layout Subsubsection*
(c)
\end_layout

\begin_layout Standard
Q could have a policy to send packets back through the path they came from,
 thus sending traffic to A back via link 1.
\end_layout

\begin_layout Subsubsection*
(d)
\end_layout

\begin_layout Standard
Q could have a policy to send traffic through the longest AS path to a destinati
on, thus sending it via R.
\end_layout

\begin_layout Subsection*
Q26
\end_layout

\begin_layout Standard
The main downside of sending traffic for a mobile node back to the home
 agent is that if the mobile node and correspondent node were close together
 (say Asia) and the home-agent was far away (say America), then traffic
 from correspondent to mobile node will go from Asia 
\begin_inset Formula $\rightarrow$
\end_inset

 America 
\begin_inset Formula $\rightarrow$
\end_inset

 Asia rather than just Asia 
\begin_inset Formula $\rightarrow$
\end_inset

 Asia.
 This is also referred to as the 
\shape italic
triangle routing problem
\shape default
.
\end_layout

\begin_layout Section*
Chapter 5
\end_layout

\begin_layout Subsection*
Q9
\end_layout

\begin_layout Subsubsection*
(a)
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{eqnarray*}
\text{Delay-Bandwidth Product} & = & 100\text{ ms}*1\text{ Gbps}\\
 & = & \frac{100}{1000}*\frac{1*10^{9}}{8}\\
 & = & 12.5\text{ MB}
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Standard
Therefore, to fit 12.5 MB of data, the 
\shape italic
Advertised Window
\shape default
 will have to be 24 bits long.
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{eqnarray*}
\text{Total Buffering Capacity} & = & \text{Delay-Bandwidth Product}*\frac{\text{Segment Lifetime}}{\text{RTT}}\\
 & = & 12.5*10^{6}*\frac{30*1000}{100}\\
 & = & 3.5\text{ GB}
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Standard
The sequence number will have to be big enough to accomodate the Total Buffering
 Capacity and not wrap around in the Segment Lifetime, thus the 
\shape italic
Sequence Number
\shape default
 will be 32 bits long.
\end_layout

\begin_layout Subsubsection*
(b)
\end_layout

\begin_layout Standard
Both the 
\shape italic
Advertised Window
\shape default
 and the 
\shape italic
Sequence Number
\shape default
 are dependent on the RTT which can change over the course of the TCP connection
, thus none of the values calculated above are absolute.
\end_layout

\begin_layout Subsection*
Q12
\end_layout

\begin_layout Subsubsection*
(a)
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{eqnarray*}
\text{Sequence Wrap Time} & = & \frac{2^{32}}{10^{9}/8}=34.36\text{ seconds}
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Subsubsection*
(b)
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{eqnarray*}
\text{Period of single increment} & = & \frac{34.26}{1000}\\
\\
\text{Wrap Time} & = & 2^{32}*\frac{34.36}{1000}*\frac{1}{86400}\\
 & = & 1709\text{ Days}
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Subsection*
Q14
\end_layout

\begin_layout Subsubsection*
(a)
\end_layout

\begin_layout Itemize
If the second packet was a retransmission, then the 
\shape italic
Sequence Number
\shape default
 will be the same as the first packet.
 The server will send a SYN ACK for this packet since it might think that
 the last SYN ACK got lost in transmission.
\end_layout

\begin_layout Itemize
If the host crashed and rebooted, then it will be for a new connection request
 and the 
\shape italic
Sequence Number
\shape default
 will most probably be different.
 In this case, the server will send an RST and abort the previous TCP Handshake
 / Connection.
\end_layout

\begin_layout Subsubsection*
(b)
\end_layout

\begin_layout Enumerate
If server not listening on <destIP, destPort> then drop packet.
\end_layout

\begin_layout Enumerate
If connection is established and SYN is outside the window boundary, then
 send a RST and abort connection.
\end_layout

\begin_layout Enumerate
If in the process of establishing a connection and waiting for ACK and the
 Sequence Number of this packet is the same as last one, resend a SYN ACK
 for this.
\end_layout

\begin_layout Enumerate
If not waiting for handshake ACK (or if the packet wasn't a retransmission),
 send a new SYN ACK for this SYN packet and go into hankshake ACK wait state.
\end_layout

\begin_layout Subsection*
Q16
\end_layout

\begin_layout Subsubsection*
(a)
\end_layout

\begin_layout Standard
Since Host B didn't send the data to A, the ACK sent by A will have a sequence
 number greater than the window of ACK's B is expecting, thus on receiving
 this ACK, it well send an empty ACK with the next sequence number expected.
\end_layout

\begin_layout Subsubsection*
(b)
\end_layout

\begin_layout Standard
Both A and B will receive the 100 byte packet and send an ACK for it, but
 since they didn't actually send it, each end will receive the ACK, and
 find that it is unacceptable and thus send an ACK for their respective
 previously expected bytes which the other end will receive and drop (since
 it's a duplicate).
\end_layout

\begin_layout Standard
Then if A sends a 200 byte packet to B, everything will be fine.
\end_layout

\begin_layout Subsection*
Q25
\end_layout

\begin_layout Section*
Chapter 6
\end_layout

\begin_layout Subsection*
Q5
\end_layout

\begin_layout Standard
Yes the congestion control window could reach 
\begin_inset Formula $2x$
\end_inset

 Delay-Bandwidth product during the slow start phase of a TCP connection,
 since the window size increases exponentially during that phase.
 It is not possible after slow start, since the congestion window increases
 linearly in the normal state, and there would be packet drops decreasing
 it before it could reach twice the size.
\end_layout

\begin_layout Subsection*
Q6
\end_layout

\begin_layout Standard
R1 cannot become congested because the max inflow that it can have is 4
 MBps and the max outflow is 4 MBps as well, thus you can never send R1
 more packets than it can send out.
\end_layout

\begin_layout Standard
For every other router R, going from top to bottom, if the max inflow is
 
\begin_inset Formula $\alpha$
\end_inset

 MBps then the max outflow is 
\begin_inset Formula $\frac{\alpha}{2}$
\end_inset

 MBps, therefore you can always send it more traffic than it can push out,
 thus congesting it.
\end_layout

\begin_layout Subsection*
Q26
\end_layout

\begin_layout Standard
This optimistic ACK method defeats the whole purpose of congestion control
 and will force the sender to send packets at the maximum rate possible
 even if they are being droppe/queued on the way.
 This could mean that if there's enough capacity available in the network
 then there won't be need for many retransmissions but it is highly likely
 that this will end up congesting the network and couse a lot of retransmissions
 because of dropped packets.
\end_layout

\begin_layout Standard
One simple (yet non-efficient) way would be to send a nonce with each packet
 and forcing the receiver to send separate ACKs (with the nonce included)
 for each segment received rather than combining them, thus there would
 be no way for the receiver to guess the nonce ahead of time and they'll
 have to wait for the packet to arrive before sending out an ACK.
\end_layout

\begin_layout Standard
Another method could be to send a checksum for the range of data being acknowled
ged, thus the sender can verify the authenticity of the ACK via the checksum.
\end_layout

\end_body
\end_document
